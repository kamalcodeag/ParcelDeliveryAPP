// <auto-generated />
using System;
using Identity.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Identity.Data.Migrations
{
    [DbContext(typeof(IdentityDbContext))]
    partial class IdentityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Identity.Data.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("81c2cd00-649e-4269-be67-ec4555e94ec8"),
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9602),
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9611),
                            Name = "CanChangeTheStatusOfParcelDeliveryOrder"
                        },
                        new
                        {
                            Id = new Guid("c47303a3-bf51-4abc-9caf-9f45c0145f2b"),
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9614),
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9615),
                            Name = "CanViewAllParcelDeliveryOrders"
                        },
                        new
                        {
                            Id = new Guid("146cec9e-8b73-4ace-8597-56e17dbd58fd"),
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9617),
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9617),
                            Name = "CanAssignParcelDeliveryOrderToCourier"
                        },
                        new
                        {
                            Id = new Guid("2f80f676-5bf2-42ab-b1b0-5c3ee58a8440"),
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9619),
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9620),
                            Name = "CanLogInCreateCourierAccount"
                        },
                        new
                        {
                            Id = new Guid("92e43e7c-7bbb-4fdb-be62-3a292c9f00e3"),
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9622),
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9622),
                            Name = "CanTrackTheDeliveryOrderByCoordinates"
                        },
                        new
                        {
                            Id = new Guid("66e21778-7449-4a51-b31a-60f767e2332c"),
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9624),
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9625),
                            Name = "CanSeeListOfCouriers"
                        });
                });

            modelBuilder.Entity("Identity.Data.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3a142a4-5210-45d9-b1b3-56da9ad2081a"),
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9793),
                            Description = "admin",
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9794),
                            Name = "admin"
                        },
                        new
                        {
                            Id = new Guid("341c19e2-942b-46bd-9e7d-5e829aebb579"),
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9796),
                            Description = "user",
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9796),
                            Name = "user"
                        },
                        new
                        {
                            Id = new Guid("1fb87710-b0b0-454a-840f-39ec216c7f56"),
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9802),
                            Description = "courier",
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9803),
                            Name = "courier"
                        });
                });

            modelBuilder.Entity("Identity.Data.Entities.RoleToPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleToPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5afe02eb-182a-42b8-b985-75d0d08223e1"),
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9823),
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9823),
                            PermissionId = new Guid("81c2cd00-649e-4269-be67-ec4555e94ec8"),
                            RoleId = new Guid("a3a142a4-5210-45d9-b1b3-56da9ad2081a")
                        },
                        new
                        {
                            Id = new Guid("910ed661-eaa1-4aa3-9e14-7052dbad08e3"),
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9826),
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9826),
                            PermissionId = new Guid("c47303a3-bf51-4abc-9caf-9f45c0145f2b"),
                            RoleId = new Guid("a3a142a4-5210-45d9-b1b3-56da9ad2081a")
                        },
                        new
                        {
                            Id = new Guid("b53044aa-56d5-49d2-bbf2-e08a86703e84"),
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9829),
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9829),
                            PermissionId = new Guid("146cec9e-8b73-4ace-8597-56e17dbd58fd"),
                            RoleId = new Guid("a3a142a4-5210-45d9-b1b3-56da9ad2081a")
                        },
                        new
                        {
                            Id = new Guid("237c0f00-6e0d-4580-a83d-8049ab194da1"),
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9831),
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9832),
                            PermissionId = new Guid("2f80f676-5bf2-42ab-b1b0-5c3ee58a8440"),
                            RoleId = new Guid("a3a142a4-5210-45d9-b1b3-56da9ad2081a")
                        },
                        new
                        {
                            Id = new Guid("df29f5cf-90e7-4593-8f74-09f299428cd3"),
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9833),
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9834),
                            PermissionId = new Guid("92e43e7c-7bbb-4fdb-be62-3a292c9f00e3"),
                            RoleId = new Guid("a3a142a4-5210-45d9-b1b3-56da9ad2081a")
                        },
                        new
                        {
                            Id = new Guid("6c62e629-c433-49dc-b3e0-bf25602ea538"),
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9836),
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9836),
                            PermissionId = new Guid("66e21778-7449-4a51-b31a-60f767e2332c"),
                            RoleId = new Guid("a3a142a4-5210-45d9-b1b3-56da9ad2081a")
                        });
                });

            modelBuilder.Entity("Identity.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<string>("Surname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdc85dc6-f413-49c7-832e-e9e830c0956c"),
                            Address = "",
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9881),
                            Email = "admin@admin.com",
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 505, DateTimeKind.Local).AddTicks(9881),
                            Name = "admin",
                            PasswordHash = "cf8fc2e4bae67334abd0d47b85146a0d6475bfc20e6d2ffed6d8e77c24dba6ee",
                            PhoneNumber = "",
                            Salt = "237bbc92-567f-4d1b-87f9-8cf34b6f2d76",
                            Surname = "admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Identity.Data.Entities.UserToRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserToRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("132e86ed-a662-45cc-991b-259c9c4962ec"),
                            CreatedDate = new DateTime(2022, 10, 26, 22, 11, 36, 506, DateTimeKind.Local).AddTicks(810),
                            LastModifiedDate = new DateTime(2022, 10, 26, 22, 11, 36, 506, DateTimeKind.Local).AddTicks(812),
                            RoleId = new Guid("a3a142a4-5210-45d9-b1b3-56da9ad2081a"),
                            UserId = new Guid("bdc85dc6-f413-49c7-832e-e9e830c0956c")
                        });
                });

            modelBuilder.Entity("Identity.Data.Entities.RoleToPermission", b =>
                {
                    b.HasOne("Identity.Data.Entities.Permission", "Permission")
                        .WithMany("RoleToPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Identity.Data.Entities.Role", "Role")
                        .WithMany("RoleToPermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Identity.Data.Entities.UserToRole", b =>
                {
                    b.HasOne("Identity.Data.Entities.Role", "Role")
                        .WithMany("UserToRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Identity.Data.Entities.User", "User")
                        .WithMany("UserToRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Identity.Data.Entities.Permission", b =>
                {
                    b.Navigation("RoleToPermissions");
                });

            modelBuilder.Entity("Identity.Data.Entities.Role", b =>
                {
                    b.Navigation("RoleToPermissions");

                    b.Navigation("UserToRoles");
                });

            modelBuilder.Entity("Identity.Data.Entities.User", b =>
                {
                    b.Navigation("UserToRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
